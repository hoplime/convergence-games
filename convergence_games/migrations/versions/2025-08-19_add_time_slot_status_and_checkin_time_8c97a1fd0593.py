"""Add time slot status and checkin time

Revision ID: 8c97a1fd0593
Revises: ebd74d6a00b4
Create Date: 2025-08-19 22:24:12.816656

"""
# pyright: reportUnusedCallResult=false

import warnings
from typing import TYPE_CHECKING

import sqlalchemy as sa
from advanced_alchemy.types import (
    GUID,
    ORA_JSONB,
    DateTimeUTC,
    EncryptedString,
    EncryptedText,
    StoredObject,
)
from alembic import op
from sqlalchemy import Text  # noqa: F401
from sqlalchemy.dialects import postgresql

if TYPE_CHECKING:
    pass

__all__ = ["downgrade", "upgrade", "schema_upgrades", "schema_downgrades", "data_upgrades", "data_downgrades"]

sa.GUID = GUID
sa.DateTimeUTC = DateTimeUTC
sa.ORA_JSONB = ORA_JSONB
sa.EncryptedString = EncryptedString
sa.EncryptedText = EncryptedText
sa.StoredObject = StoredObject

# revision identifiers, used by Alembic.
revision = "8c97a1fd0593"
down_revision = "ebd74d6a00b4"
branch_labels = None
depends_on = None


def upgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            schema_upgrades()
            data_upgrades()


def downgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            data_downgrades()
            schema_downgrades()


def schema_upgrades() -> None:
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("PRE_ALLOCATION", "ALLOCATING", "ALLOCATED", name="timeslotstatus").create(op.get_bind())
    with op.batch_alter_table("time_slot", schema=None) as batch_op:
        batch_op.add_column(sa.Column("checkin_open_time", sa.DateTimeUTC(timezone=True), nullable=True))
        batch_op.add_column(
            sa.Column(
                "status",
                postgresql.ENUM("PRE_ALLOCATION", "ALLOCATING", "ALLOCATED", name="timeslotstatus", create_type=False),
                server_default="PRE_ALLOCATION",
                nullable=False,
            )
        )

    # ### end Alembic commands ###


def schema_downgrades() -> None:
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("time_slot", schema=None) as batch_op:
        batch_op.drop_column("status")
        batch_op.drop_column("checkin_open_time")

    sa.Enum("PRE_ALLOCATION", "ALLOCATING", "ALLOCATED", name="timeslotstatus").drop(op.get_bind())
    # ### end Alembic commands ###


def data_upgrades() -> None:
    """Add any optional data upgrade migrations here!"""


def data_downgrades() -> None:
    """Add any optional data downgrade migrations here!"""
